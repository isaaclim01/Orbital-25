import uvicorn
from fastapi import FastAPI, Request
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
from typing import Dict, List, Optional
import requests
from serpapi import GoogleSearch


# To activate, set up venv using "source venv/bin/activate"
# Then, run "python3 main.py"

class Fruit(BaseModel):
    name: str

class Fruits(BaseModel):
    fruits: List[Fruit]

class Booking(BaseModel):
    type: str
    departure_id: str
    arrival_id: str
    outbound_date: str
    return_date: str
    adults: int
    stops: int
    currency: str
    max_price: int
    departure_token: Optional[str] = None  # Optional field for departure flight token
    booking_token: Optional[str] = None  # Optional field for booking flight token

class BookingRequest(BaseModel):
    post_data: str


app = FastAPI()

origin = [
    "http://localhost:3000"
]

# allow origins allows you to send requests from frontend (local host 3000) to the backend
app.add_middleware(
    CORSMiddleware,
    allow_origins=origin,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

memory_db = {"fruits": [Fruit(name="apple"), Fruit(name="banana"), Fruit(name="orange")]}

@app.get("/")
def root():
    return {"message": "hello world"}

@app.get("/fruits", response_model=Fruits)
def get_fruits():
    return Fruits(fruits=memory_db["fruits"])

@app.post("/fruits")
def add_fruit(fruit: Fruit):
    memory_db["fruits"].append(fruit)
    return fruit

@app.get('/weather')
async def get_weather(city: str):
    api_key = "a4a8f5b8104f0c14e06bef376d39fbf6"
    url = f"https://api.openweathermap.org/data/2.5/weather?lat=44.34&lon=10.99&appid={api_key}"
    response = requests.get(url)
    return response.json()

@app.get('/flightsearch')
def flight_search():
    params = {
  "api_key": "d52e94ef2b1410c86c4710ddbd7995c51de0b3854807ab1d647a45381ed7ca98",
  "engine": "google_flights",
  "departure_id": "SIN",
  "arrival_id": "AUS",
  "hl": "en",
  "gl": "us",
  "currency": "USD",
  "outbound_date": "2025-09-01",
  "return_date": "2025-10-10",
    "type": "1",
  "adults": "1",
  "sort_by": "1",
  "stops": "0"
    }
    search = GoogleSearch(params)
    results = search.get_dict()
    return results

# need to add post method to post to the flightsearch endpoint
@app.post('/flightsearch')
async def flight_search_post(booking: Booking):

    if booking.booking_token is not None:
        params = {
        "api_key": "d52e94ef2b1410c86c4710ddbd7995c51de0b3854807ab1d647a45381ed7ca98",
        "engine": "google_flights",
        "hl": "en",
        "gl": "us",
        **booking.dict(exclude="departure_token", exclude_unset=True, exclude_none=True)
    }
    else:  
        params = {
            "api_key": "d52e94ef2b1410c86c4710ddbd7995c51de0b3854807ab1d647a45381ed7ca98",
            "engine": "google_flights",
            "hl": "en",
            "gl": "us",
            **booking.dict(exclude_unset=True, exclude_none=True),
        }
    
    search = GoogleSearch(params)
    results = search.get_dict()
    return results #should return departure flight info & departure ID

@app.get('/flightsearch/booking')
async def flight_search_booking():
    headers = {
    "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36",
    "Referer": "https://www.google.com/travel/flights",
    "Content-Type": "application/x-www-form-urlencoded"
}
    url = "https://www.google.com/travel/clk/f"
    response = requests.post(url, data=post_data, headers=headers)
    print(response.status_code)
    print(response.url)
    return {"status_code": response.status_code, "url": response.text}

@app.post('/flightsearch/booking')
async def flight_search_booking(data: BookingRequest):
    headers = {
    "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36",
    "Referer": "https://www.google.com/travel/flights",
    "Content-Type": "application/x-www-form-urlencoded"
}
    url = "https://www.google.com/travel/clk/f"
    response = requests.post(url, data=data.post_data, headers=headers)
    return {"status_code": response.status_code, "url": response.text}

if __name__ == "__main__":
    uvicorn.run(app, host="0.0.0.0", port=8000)

post_data = "u="
